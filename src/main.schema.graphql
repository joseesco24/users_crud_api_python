# ** info: this schema works as a contract between the app and the client

scalar Integer

type Query {
  usersPublicData(limit: Int!, offset: Int!): [UserPublicData!]!
  usersFullData(limit: Int!, offset: Int!): [UserFullData!]!
}

type Mutation {
  addUser(input: UserCreationData): UserPublicData!
}

input UserCreationData {
  estatalId: Integer!
  firstName: String!
  lastName: String!
  phoneNumber: Integer!
  email: String!
  gender: String!
  birthday: String!
  password: String!
}

type UserPublicData {
  internalId: ID!
  estatalId: Integer!
  firstName: String!
  lastName: String!
  phoneNumber: Integer!
  email: String!
  gender: String!
  birthday: String!
}

type UserFullData {
  internalId: ID!
  estatalId: Integer!
  firstName: String!
  lastName: String!
  phoneNumber: Integer!
  email: String!
  gender: String!
  birthday: String!
  creation: String!
  modification: String!
  password: String!
}
